[{"C:\\Users\\emmet\\Desktop\\Code\\chess-xr\\chess-xr\\src\\index.js":"1"},{"size":1768,"mtime":1608457199351,"results":"2","hashOfConfig":"3"},{"filePath":"4","messages":"5","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"6"},"1ql89wy","C:\\Users\\emmet\\Desktop\\Code\\chess-xr\\chess-xr\\src\\index.js",["7","8","9","10"],"import { useLoader } from \"react-three-fiber\"\nimport { GLTFLoader } from \"three/examples/jsm/loaders/GLTFLoader\"\nimport ReactDOM from 'react-dom'\nimport React, { useState, useRef } from 'react'\nimport { OrbitControls, Box } from 'drei'\nimport { VRCanvas, DefaultXRControllers, Hover } from 'react-xr'\nimport './styles.css'\n\nfunction Chessboard() {\n  // Load the gltf file\n  const { nodes, materials } = useLoader(GLTFLoader, \"/chessboard.gltf\")\n  // Fetch some reactive state\n  const model = useRef()\n\n  return (\n    <mesh dispose={null} scale={[0.1, 0.1, 0.1]}>\n      <group ref={model} position={[-0.05, 0.37, 0.3]} scale={[0.15, 0.15, 0.15]}>\n        <group rotation={[1.88, -0.35, 2.32]} scale={[2.97, 2.97, 2.97]}>\n          <primitive object={nodes.Bone} />\n          <skinnedMesh castShadow receiveShadow material={materials.glove} material-roughness={1} geometry={nodes.arm.geometry} skeleton={nodes.arm.skeleton} />\n        </group>\n        <group rotation={[0, -0.04, 0]} scale={[141.94, 141.94, 141.94]}>\n          <mesh castShadow receiveShadow material={materials.wood} geometry={nodes.mesh_0.geometry} />\n        </group>\n      </group>\n    </mesh>\n  )\n}\n\nconst App = () => {\n  const [isHovered, setIsHovered] = useState(false)\n  const color = isHovered ? 'blue' : '#e23'\n\n  return (\n    <VRCanvas>\n      <ambientLight />\n      <spotLight />\n\n      <OrbitControls />\n\n      {/* <Hover onChange={setIsHovered}>\n        <Box position={[0, 0.8, -1]} scale={[0.3, 0.3, 0.3]}>\n          <meshStandardMaterial color={color} />\n        </Box>\n      </Hover> */}\n      <Chessboard position={[0, 0.8, -1]} scale={[0.3, 0.3, 0.3]}>\n      </Chessboard>\n      <DefaultXRControllers />\n    </VRCanvas>\n  )\n}\n\nReactDOM.render(<App />, document.getElementById('root'))\n",{"ruleId":"11","severity":1,"message":"12","line":5,"column":25,"nodeType":"13","messageId":"14","endLine":5,"endColumn":28},{"ruleId":"11","severity":1,"message":"15","line":6,"column":42,"nodeType":"13","messageId":"14","endLine":6,"endColumn":47},{"ruleId":"11","severity":1,"message":"16","line":31,"column":21,"nodeType":"13","messageId":"14","endLine":31,"endColumn":33},{"ruleId":"11","severity":1,"message":"17","line":32,"column":9,"nodeType":"13","messageId":"14","endLine":32,"endColumn":14},"no-unused-vars","'Box' is defined but never used.","Identifier","unusedVar","'Hover' is defined but never used.","'setIsHovered' is assigned a value but never used.","'color' is assigned a value but never used."]